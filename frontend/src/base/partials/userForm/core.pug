- var formAction = 'add'

section.form-part#core
  .smallScreen
    button.accordion
      i.fa-solid.fa-chevron-down
      h2 Core
  .largeScreen
    .form-header-main
      h2 Core
      .nav
        button.bordered-blue.medium.right.next Next
          i.fa-solid.fa-angles-right
  .form-partial-content
    
    //- TODO make sure to display only if editing file format (var formAction = 'edit')
    if(formAction === 'edit')
      .part(th:if="${edit}")
        include ./searchPUID.pug  
    h3 Main
    .part
      fieldset
        //- TODO - read INFO : 
        //- 1) each .form-row has unique id with dashes (inside is input with same name and id just cammel case)
        //- 2) if element is to be reviewed add class '.before-review' or 'after-review'

        //- File format URI (hidden field)
        input(type="hidden", th:field="*{uri}")
        //- File format name
        .form-row#file-format-name(th:classappend="${compare?.name} ? 'before-review' : ''")
          p.inputType(th:text="${#strings.isEmpty(ff?.name) ? 'New content' : 'Edited content'}") New content
          .tooltipPlusAction
            .tooltip-container
              .label
                label(for="FileFormatName") File format name (required)
                span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.1.1') tabindex='0')
                  .i-wrapper
                    i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
            .action-monitoring
              .review-type
                i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                p Require reviewing
              .review-type
                i.fa-solid.fa-square-check
                p Reviewed
          .input-group
            button Accept current
            input(name="Name" id="FileFormatName" th:field="*{name}", th:data-undo="${ff?.name}")
          .input-group(th:if="${compare?.name}")
            button.incoming Accept incoming
            input(th:value="${compare.name}" name="Name" id="FileFormatName" )

        //- File format version
        .form-row#version-container(th:classappend="${compare?.version} ? 'before-review' : ''")
          p.inputType(th:text="${#strings.isEmpty(ff?.version) ? 'New content' : 'Edited content'}") Edited content
          .tooltipPlusAction
            .tooltip-container
              .label
                label(for="version") Version
                span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.1.2') tabindex='0')
                  .i-wrapper
                    i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
            .action-monitoring
              .review-type
                i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                p Require reviewing
              .review-type
                i.fa-solid.fa-square-check
                p Reviewed
          .input-group
            button.current Accept current
            input.medium-short(name="version" id="version", th:field="*{version}", th:data-undo="${ff?.version}")
          .input-group(th:if="${compare?.version}")
            button.incoming Accept incoming
            input.medium-short(th:value="${compare.version}" name="version" id="version")

        //- File format description
        .form-row#file-format-description(th:classappend="${compare?.description} ? 'before-review' : ''")
          p.inputType(th:text="${#strings.isEmpty(ff?.description) ? 'New content' : 'Edited content'}") Edited content
          .tooltipPlusAction
            .tooltip-container
              .label
                label(for="description") File format description
                span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.1.3') tabindex='0')
                  .i-wrapper
                    i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
            .action-monitoring
              .review-type
                i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                p Require reviewing
              .review-type
                i.fa-solid.fa-square-check
                p Reviewed
          .input-group
            button.current Accept current
            textarea.medium-short(name="description" id="description" cols="30" rows="10", th:field="*{description}", th:data-undo="${ff?.description}")
          .input-group(th:if="${compare?.description}")
            button.incoming Accept incoming
            textarea.medium-short(th:value="${compare.description}" cols="30" rows="10" name="description" id="description")

        //- Format type
        .form-row#format-type-container(th:classappend="${compare?.formatType} ? 'before-review' : ''")
          p.inputType(th:text="${#strings.isEmpty(ff?.formatType) ? 'New content' : 'Edited content'}") Edited content
          .tooltipPlusAction
            fieldset
              legend.sr-only Select format type
              div
                .tooltip-container
                  .label
                    label.from-external-only(for="formatType") Format type
                    label.from-internal-only(for="formatType") Format type (required)
                    span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.1.4') tabindex='0')
                      .i-wrapper
                        i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
            .action-monitoring
              .review-type
                i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                p Require reviewing
              .review-type
                i.fa-solid.fa-square-check
                p Reviewed
          .input-group
            button.current Accept current
            select(id="formatType", name="formatType" th:field="*{formatType}")
              option(th:each="co : ${classificationOptions}", th:value="${co.value}", th:text="${co.label}") option 1
          .input-group
            button.incoming Accept incoming
            select(th:if="${compare?.formatType}" id="formatType" name="formatType")
              option(th:each="co : ${classificationOptions}", th:value="${co.value}", th:text="${co.label}") option 1
        .from-internal-only(th:if="${internal}")
          include ./priority-over.pug

    h3.border References
    .part
      fieldset.references(th:each="r, stat : *{references} ",th:with="compareSize=${#lists.size(compare?.references ?: {})}, compareRef=${compareSize > stat.index} ? ${compare.references.get(__${stat.index}__)} : null")
        input(type="hidden", th:field="*{references[__${stat.index}__].uri}")
        .row-group.inline.reference-group
          //- Reference Name
          .form-row#reference-name(th:classappend="${compareRef?.name} ? 'before-review' : ''")
            p.inputType(th:text="${#strings.isEmpty(r.name) ? 'New content' : 'Edited content'}") Edited content
            .tooltipPlusAction
              .tooltip-container
                .label
                  label(th:for="${'ReferenceName' + stat.index}") Reference Name
                  span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.1') tabindex='0')
                    .i-wrapper
                      i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
              .action-monitoring
                .review-type
                  i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                  p Require reviewing
                .review-type
                  i.fa-solid.fa-square-check
                  p Reviewed
            .input-group
              button Accept current
              input(th:id="${'ReferenceName' + stat.index}" th:field="*{references[__${stat.index}__].name}", th:data-undo="${r?.name}")
            .input-group(th:if="${compareRef?.name}")
              button.incoming Accept incoming
              input(th:value="${compareRef.name}" th:id="${'ReferenceName' + stat.index}")
            
          //- Link URL
          .form-row#reference-link-url(th:classappend="${compareRef?.identifiers} ? 'before-review' : ''")
            p.inputType(text="${#strings.isEmpty(r?.identifiers) ? 'New content' : 'Edited content'}") Edited content
            .tooltipPlusAction
              .tooltip-container
                .label
                  label(th:for="${'ReferenceLink' + stat.index}") Link URL
                  span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.2') tabindex='0')
                    .i-wrapper
                      i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
              .action-monitoring
                .review-type
                  i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                  p Require reviewing
                .review-type
                  i.fa-solid.fa-square-check
                  p Reviewed
            .input-group
              button Accept current
              input(th:id="${'ReferenceLink' + stat.index}" th:field="*{references[__${stat.index}__].identifiers}", th:data-undo="${r?.identifiers}")
            .input-group(th:if="${compareRef?.identifiers}")
              button.incoming Accept incoming
              input(th:value="${compareRef.identifiers}" th:id="${'ReferenceLink' + stat.index}")

          //- Documentation
          .form-row#reference-documentation.checkbox-container.documentation
            .input-group
              input(type="checkbox", th:checked="${r?.isDocumentation}")
            .tooltipPlusAction
              .tooltip-container
                .label
                  label(for="referenceDocumentation") Documentation
                  span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.3') tabindex='0')
                    .i-wrapper
                      i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
              
          .additional-fields
            //- Author
            .form-row#reference-author(th:classappend="${compareRef?.author} ? 'before-review' : ''")
              p.inputType(th:text="${#strings.isEmpty(r?.author) ? 'New content' : 'Edited content'}") Edited content
              .tooltipPlusAction
                .tooltip-container
                  .label
                    label(th:id="${'ReferenceAuthor' + stat.index}") Author
                    span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.4') tabindex='0')
                      .i-wrapper
                        i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
                .action-monitoring
                  .review-type
                    i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                    p Require reviewing
                  .review-type
                    i.fa-solid.fa-square-check
                    p Reviewed
              .input-group
                button Accept current
                input.value(type="hidden", th:id="${'ReferenceAuthor' + stat.index}", th:field="*{references[__${stat.index}__].author}", th:data-undo="${r?.author}")
                input.label(th:id="${'ReferenceAuthorName' + stat.index}", th:field="*{references[__${stat.index}__].authorName}", th:data-undo="${r?.authorName}")
              .input-group(th:if="${compareRef?.author}")
                button.incoming Accept incoming
                input(type="hidden", th:id="${'ReferenceAuthor' + stat.index}", th:value="${compareRef?.author}")
                input(th:id="${'ReferenceAuthorName' + stat.index}", th:value="${compareRef?.authorName}")
            th:block(th:if="${editorial}")
              .button-container
                button.black.medium.push-right.add-actor-button.noJS Add actor

            //- Publication date
            .form-row#publication-date(th:classappend="${compareRef?.publicationDate} ? 'before-review' : ''")
              p.inputType(text="${#strings.isEmpty(r?.publicationDate) ? 'New content' : 'Edited content'}") Edited content
              .tooltipPlusAction
                .tooltip-container
                  .label
                    label(th:for="${'ReferenceDate' + stat.index}") Publication date
                    span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.6') tabindex='0')
                      .i-wrapper
                        i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
                .action-monitoring
                  .review-type
                    i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                    p Require reviewing
                  .review-type
                    i.fa-solid.fa-square-check
                    p Reviewed
              .input-group
                button Accept current
                input.date(type="date" th:id="${'ReferenceDate' + stat.index}", th:field="*{references[__${stat.index}__].publicationDate}", th:data-undo="${r?.publicationDate}")
              .input-group(th:if="${compareRef?.publicationDate}")
                button.incoming Accept incoming
                input.date(type="date" th:value="${compareRef.publicationDate}")

            //- Publication Type
            .form-row#publication-type(th:classappend="${compareRef?.type} ? 'before-review' : ''")
              p.inputType(text="${#strings.isEmpty(r?.type) ? 'New content' : 'Edited content'}") Edited content
              .tooltipPlusAction
                .tooltip-container
                  .label
                    label(th:for="${'ReferenceType' + stat.index}") Type
                    span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.7') tabindex='0')
                      .i-wrapper
                        i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
                .action-monitoring
                  .review-type
                    i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                    p Require reviewing
                  .review-type
                    i.fa-solid.fa-square-check
                    p Reviewed
              .input-group
                button Accept current
                input(th:id="${'ReferenceType' + stat.index}", th:field="*{references[__${stat.index}__].type}", th:data-undo="${r?.type}")
              .input-group(th:if="${compareRef?.type}")
                button.incoming Accept incoming
                input(th:value="${compareRef.type}")

            //- Publication Note
            .form-row#publication-note(th:classappend="${compareRef?.note} ? 'before-review' : ''")
              p.inputType(text="${#strings.isEmpty(r?.note) ? 'New content' : 'Edited content'}") Edited content
              .tooltipPlusAction
                .tooltip-container
                  .label
                    label(th:for="${'ReferenceNote' + stat.index}") Note
                    span.tooltip-toggle(aria-label=htmlWebpackPlugin.options.getTooltip('form', '1.2.8') tabindex='0')
                      .i-wrapper
                        i.fa.fa-solid.fa-circle-info(role="img" aria-label="information icon")
                .action-monitoring
                  .review-type
                    i.fa-solid.fa-triangle-exclamation(aria-hidden="true")
                    p Require reviewing
                  .review-type
                    i.fa-solid.fa-square-check
                    p Reviewed
              .input-group
                button Accept current
                textarea(th:id="${'ReferenceNote' + stat.index}", th:field="*{references[__${stat.index}__].type}", th:data-undo="${r?.note}")
              .input-group(th:if="${compareRef?.note}")
                button.incoming Accept incoming
                textarea(th:value="${compareRef.note}")
          .button-container
            button.bordered-red.small.push-right.delete-reference
              | Delete reference
      .button-container
        button.black.medium.push-right#add-reference
          | Add reference
          
          
    


